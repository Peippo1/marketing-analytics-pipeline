name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

  test:
    runs-on: ubuntu-latest
    needs: build-and-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Activate Streamlit Environment
        run: |
          python -m venv streamlit_env
          source streamlit_env/bin/activate
          pip install -r requirements-streamlit.txt
          pip install email-validator>=2.0  # Force install email-validator 2.0+
          pip install pytest

      - name: List installed packages
        run: |
          pip list

      - name: Run FastAPI tests
        run: |
          pytest tests/test_fastapi.py --maxfail=1 --disable-warnings -q

      - name: Run Streamlit tests
        run: |
          pytest tests/test_streamlit.py --maxfail=1 --disable-warnings -q

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: |
          docker build -t marketing-analytics-app .
          docker build -f Dockerfile.fastapi -t fastapi-app .
